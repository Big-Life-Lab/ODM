@startuml activitydiagram
skinparam DefaultTextAlignment center
start

:Create a variable \n for organization : \n "org_group";

:Create dictionary of \n pandas dataframes \n from user data: \n "data";

:Create a list of dictionaries \n from the schema \n specifying sharing rules to filter;

:Filter data based on schema;

:Iterate through the schema;

    if () then (schema['direction'] = 'column')
        :Filter columns/ variables;
        :Loop over each table in \n `data` dictionary;
            if () then ("shareWith" not contains 'org_group')
                :Keep the variable \n inside table;
            elseif () then ("sharedWith" contains 'org_group' and schema['filterValue'] = 'ALL')
                :Remove the variable \n from table;
            else () then ("sharedWith" contains 'org_group' and schema['filterValue'] present in table['variable'])
                :Remove all the variable \n from table; 
            endif;

    else () then (schema['direction'] = 'row')
        :Filter rows in the data \n for each organization;
        :Loop over each table in \n `data` dictionary;
        if () then ("filterValue"= [a,b])
            :Remove all values \n for the variable \n within the range \n between a and b \n including both a and b;
        elseif () then ("filterValue" = (a,b])
            :Remove all values \n for the variable \n within the range \n between a and b \n excluding a and including b;
        elseif () then ("filterValue" = [a,b))
            :Remove all values \n for the variable \n within the range \n between a and b \n including a and excluding b;
        elseif () then ("filterValue" = (a,b))
            :Remove all values \n for the variable \n within the range \n between a and b \n excluding both a and b;
        elseif () then ("filterValue" = a;b)
            :Remove all values \n for the variable \n where value of \n variable = a 'or' b;
        elseif () then ("filterValue" = a)
            :Remove all values \n for the variable \n where value of \n variable = a;
        elseif () then ("filterValue" !=a)
            :Remove all values \n for the variable \n where value of \n variable not equal to a;
        endif
    endif;

:Return dicionary \n with tables as keys \n and list of dictionaries as rows; 

:Return a list of dictionaries \n specifying each row removed \n with ruleid;
stop
@enduml